{
  "root": true,
  "extends": [
    "plugin:@angular-eslint/recommended"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/ng-cli-compat",
        "plugin:@angular-eslint/ng-cli-compat--formatting-add-on",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "plugins": [
        "eslint-plugin-no-null",
        "eslint-plugin-unicorn"
      ],
      "rules": {
        "@angular-eslint/component-max-inline-declarations": "off",
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": [
              "app"
            ],
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": [
              "app"
            ],
            "style": "camelCase"
          }
        ],
        "@angular-eslint/no-attribute-decorator": "error",
        "@angular-eslint/no-forward-ref": "error",
        "@angular-eslint/no-lifecycle-call": "error",
        "@angular-eslint/no-pipe-impure": "off",
        "@angular-eslint/no-queries-metadata-property": "error",
        "@angular-eslint/prefer-output-readonly": "error",
        "@angular-eslint/use-component-view-encapsulation": "error",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/naming-convention": [
          "error",
          { "selector": "default", "format": ["camelCase", "snake_case"] },
          { "selector": "classProperty", "format": ["camelCase", "snake_case", "StrictPascalCase"], "leadingUnderscore": "allow" },
          { "selector": "method", "format": ["strictCamelCase"], "leadingUnderscore": "allow", "trailingUnderscore": "allow" },
          { "selector": "typeLike", "format": ["PascalCase"] },
          { "selector": "enumMember", "format": ["PascalCase"] },
          { "selector": "parameter", "format": ["camelCase", "snake_case"], "leadingUnderscore": "allow" }
        ],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": [
              // Index signature
              "signature",
              "decorated-field",
              "static-get",
              "instance-get",
              "abstract-get",
              "get",
              "decorated-get",
              "set",
              "decorated-set",
              "static-set",
              "instance-set",
              "abstract-set",

              // Public
              "public-decorated-field",
              "public-static-get",
              "public-instance-get",
              "public-abstract-get",
              "public-get",
              "public-static-set",
              "public-instance-set",
              "public-abstract-set",
              "public-set",
              "public-decorated-get",
              "public-decorated-set",
              "public-static-field",
              "public-instance-field",
              "public-abstract-field",

              // Protected
              "protected-decorated-field",
              "protected-static-get",
              "protected-instance-get",
              "protected-abstract-get",
              "protected-get",
              "protected-decorated-get",
              "protected-static-set",
              "protected-instance-set",
              "protected-abstract-set",
              "protected-set",
              "protected-decorated-set",
              "protected-static-field",
              "protected-instance-field",
              "protected-abstract-field",

              // Private
              "private-decorated-field",
              "private-static-get",
              "private-instance-get",
              "private-abstract-get",
              "private-get",
              "private-decorated-get",
              "private-static-set",
              "private-instance-set",
              "private-abstract-set",
              "private-set",
              "private-decorated-set",
              "private-static-field",
              "private-instance-field",
              "private-abstract-field",

              // Constructors
              "public-constructor",
              "protected-constructor",
              "private-constructor",

              // Methods
              "public-decorated-method",
              "protected-decorated-method",
              "private-decorated-method",

              "public-static-method",
              "public-instance-method",
              "public-abstract-method",

              "protected-static-method",
              "protected-instance-method",
              "protected-abstract-method",

              "private-static-method",
              "private-instance-method",
              "private-abstract-method"
            ]
          }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "no-public"
          }
        ],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            }
          }
        ],
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-type-arguments": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unused-expressions": [
          "error",
          {
            "allowShortCircuit": true
          }
        ],
        "@typescript-eslint/adjacent-overload-signatures": [
          "off",
          {
            "OPTION_IGNORE_ACCESSORS": true
          }
        ],
        "@typescript-eslint/no-use-before-define": "error",
        "@typescript-eslint/prefer-readonly": "off",
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/semi": [
          "error"
        ],
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/unbound-method": "error",
        "arrow-parens": [
          "error",
          "always"
        ],
        "brace-style": [
          "off",
          "off"
        ],
        "class-methods-use-this": "off",
        "comma-dangle": [
          "error",
          "always-multiline"
        ],
        "complexity": [
          "error",
          {
            "max": 40
          }
        ],
        "default-case": "off",
        "eqeqeq": [
          "error",
          "always"
        ],
        "id-blacklist": "off",
        "id-match": "off",
        "import/no-default-export": "error",
        "import/no-extraneous-dependencies": "off",
        "import/no-unassigned-import": [
          "error",
          {
            "allow": [
              "zone.js/**/*",
              "zone.js",
              "shaka-player"
            ]
          }
        ],
        "import/order": "off",
        "max-len": [
          "error",
          {
            "code": 160,
            "comments": 180
          }
        ],
        "max-lines": [
          "error",
          1200
        ],
        "newline-per-chained-call": "error",
        "no-bitwise": "off",
        "no-cond-assign": "off",
        "no-param-reassign": "error",
        "no-duplicate-case": "error",
        "no-duplicate-imports": "error",
        "no-empty": "error",
        "no-extra-bind": "error",
        "no-invalid-this": "error",
        "no-multiple-empty-lines": "error",
        "no-new-func": "error",
        "no-null/no-null": "off",
        "no-plusplus": [
          "off",
          {
            "allowForLoopAfterthoughts": true
          }
        ],
        "no-redeclare": "error",
        "no-restricted-syntax": [
          "error",
          "ForInStatement"
        ],
        "no-return-await": "error",
        "no-sequences": "error",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-undef-init": "off",
        "no-underscore-dangle": "off",
        "no-useless-constructor": "off",
        "no-void": "off",
        "padding-line-between-statements": [
          "error",
          {
            "blankLine": "always",
            "prev": "*",
            "next": "return"
          }
        ],
        "prefer-object-spread": "error",
        "prefer-template": "error",
        "keyword-spacing": "error",
        "comma-spacing": "error",
        "key-spacing": "error",
        "arrow-spacing": "error",
        "object-curly-spacing": ["error", "always"],
        "space-infix-ops": "error",
        "space-before-function-paren": "error",
        "space-before-blocks": "error",
        "space-unary-ops": "error",
        "space-in-parens": [
          "off",
          "always"
        ],
        "unicorn/filename-case": "error",
        "yoda": "off"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {
        "@angular-eslint/template/conditional-complexity": "off",
        "@angular-eslint/template/cyclomatic-complexity": "off",
        "@angular-eslint/template/no-call-expression": "off",
        "@angular-eslint/template/use-track-by-function": "off"
      }
    }
  ]
}
